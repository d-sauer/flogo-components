# This file is copied as /etc/nginx/nginx.conf inside the container image.

user  nginx;
worker_processes  1;

# Run in foreground by turning off daemon mode.
# Either set it in this file:
# daemon off;
#
# OR
#
# Pass it as an argument on command line.
# CMD ["/usr/sbin/nginx", "-g", "daemon off;"]

# Note: The PID directory needs to exist beforehand.
#       Also, the pid file is always created as/by user root.
pid        /var/run/nginx.pid;

# Forward error logs to docker log collector,
#   by sending it to stderr instead of a log file.
error_log  /dev/stderr warn;

events {
    worker_connections  32;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Forward access logs to docker log collector,
    #   by sending it to stdout instead of a log file.
    # This directive must be inside the nginx main 'http' section - not outside.
    access_log  /dev/stdout  main;

    sendfile        on;

    keepalive_timeout  65;

    #gzip  on;

    server {
        listen 80;
        location / {
            proxy_pass https://httpbin.org;
        }
    }
}

#load_module /path/to/otel_ngx_module.so;

# http {
#   opentelemetry_config /conf/otel-nginx.toml;
#
#   server {
#     listen 80;
#     server_name otel_example;
#
#     root /var/www/html;
#
#     location = / {
#       opentelemetry_operation_name my_example_backend;
#       opentelemetry_propagate;
#       proxy_pass http://localhost:3500/;
#     }
#
#     location = /b3 {
#       opentelemetry_operation_name my_other_backend;
#       opentelemetry_propagate b3;
#       # Adds a custom attribute to the span
#       opentelemetry_attribute "req.time" "$msec";
#       proxy_pass http://localhost:3501/;
#     }
#
#     location ~ \.php$ {
#       root /var/www/html/php;
#       opentelemetry_operation_name php_fpm_backend;
#       opentelemetry_propagate;
#       fastcgi_pass localhost:9000;
#       include fastcgi.conf;
#     }
#   }
# }