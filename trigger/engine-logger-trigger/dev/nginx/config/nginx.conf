load_module modules/otel_ngx_module.so;

user nginx;
worker_processes auto;
error_log  /dev/stderr warn;
pid /run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    opentelemetry_config /etc/nginx/otel-nginx.toml;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format json_logs escape=json
      '{'
        '"correlation-id":"$correlationId",'
        '"X-Amzn-Trace-Id":"$http_x_amzn_trace_id",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"time_local":"$time_local",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"upstream_connect_time":"$upstream_connect_time",'
        '"upstream_response_time":"$upstream_response_time",'
        '"upstream_header_time":"$upstream_header_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent"'
        '"X-Forwarded-For":"$http_x_forwarded_for"'
      '}';

    access_log /var/log/nginx/access.log json_logs buffer=32k;
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    map $http_correlation_id $correlationId {
        default                 "$request_id";
        "~^[0-9a-fA-F\-]{8,36}$"     "$http_correlation_id";
    }

    server {
        listen 80;
        server_name otel_example;

        location = / {
          opentelemetry_operation_name proxy_pass;
          opentelemetry_propagate;

          proxy_set_header correlation-id $correlationId;
          proxy_pass http://httpbin.org/get;

          add_header correlation-id "$correlationId" always;
        }
    }
}